#!/bin/bash

info() {
    echo -e "\033[0;36m\n[--- $1 ---]\n\033[0m"
}

warn() {
    echo -e "\033[0;31m\n[--- $1 ---]\n\033[0m"
}

docker_build() {
    image=$1
    context=$2
    tag=$3

    if [ ! -z $ISOLATION_ID ]
    then
        tag=$tag:$ISOLATION_ID
    fi

    info "Building $image with $tag"

    # Build the image and pass in any proxy information if set
    docker build -f $image -t $tag $context \
        --build-arg https_proxy=$https_proxy \
        --build-arg http_proxy=$http_proxy \
        --build-arg HTTPS_PROXY=$HTTPS_PROXY \
        --build-arg HTTP_PROXY=$HTTP_PROXY
}

docker_clean() {
    image=$1
    docker rmi $image
}


check_cmnd() {
    if [ $? -eq 0 ]
    then
      info "Success"
    else
      warn $?
    fi
}

main () {
	top_dir=$(cd $(dirname $(dirname $0)) && pwd)
    hbsnark_lib=$top_dir/libs
    temp_files=$top_dir/temp
    zksnark_dockerfile=$temp_files/libsnark

	info 'Creating temp directory'
	mkdir -p $temp_files
    check_cmnd

	info 'Fetching libsnark build Dockerfile'
	curl https://raw.githubusercontent.com/scipr-lab/libsnark/master/Dockerfile --output $zksnark_dockerfile
    check_cmnd

	info 'Building libsnark'
	docker_build $zksnark_dockerfile $top_dir libsnark
    check_cmnd

	info 'Building hashblock_zksnark'
	docker_build $top_dir/docker/hashblock-zksnark $top_dir hashblock-zksnark
    check_cmnd

	info 'Removing libsnark image'
    # docker_clean libsnark
    # check_cmnd
	info 'Copying hashblock_zksnark executables out of image'
    docker run --rm -v $(pwd)/libs:/hbsnark_libs hashblock-zksnark bash -c "cp -r hbzksnark /hbsnark_libs/."
    # check_cmnd
	info 'Remvoing hashblock-zksnark image'
    # docker_clean libsnark hashblock-zksnark
    # check_cmnd

    info 'Removing temp directory'
    rm -R $temp_files

}

main
