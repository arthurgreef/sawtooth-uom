#include <stdio.h>
#include <stdlib.h>
#include <config/bitcoin-config.h>
#include <endian.h>
#include <iostream>
#include <sstream>

//#include <secp256k1.h>

#include "zcash/Address.hpp"
#include "zcash/Note.hpp"

#include "amount.h"
#include "random.h"
#include "librustzcash.h"

#include "base64.h"

using namespace std;

int main( int c , char *argv[]) {

    unsigned char diversifier[11] = {0xf1, 0x9d, 0x9b, 0x79, 0x7e, 0x39, 0xf3, 0x37, 0x44, 0x58, 0x39};
    unsigned char pk_d[32] = {
    0xdb, 0x4c, 0xd2, 0xb0, 0xaa, 0xc4, 0xf7, 0xeb, 0x8c, 0xa1, 0x31, 0xf1, 0x65, 0x67,
    0xc4, 0x45, 0xa9, 0x55, 0x51, 0x26, 0xd3, 0xc2, 0x9f, 0x14, 0xe3, 0xd7, 0x76, 0xe8,
    0x41, 0xae, 0x74, 0x15};
    unsigned char r[32] = {
        0x39, 0x17, 0x6d, 0xac, 0x39, 0xac, 0xe4, 0x98, 0x0e, 0xcc, 0x8d, 0x77, 0x8e, 0x89,
        0x86, 0x02, 0x55, 0xec, 0x36, 0x15, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00};
    uint64_t v = 27;   
    unsigned char cm[32];

    bool result = librustzcash_sapling_compute_cm(
        diversifier,
        pk_d,
        v,
        r,
        cm
    );

    if(result)
    {
        cout << base64_encode(cm, 32);
    }
    else
    {
        printf("Failed to create sapling commitment\n");
    }

	printf("Test passed\n");
	return 0;
}